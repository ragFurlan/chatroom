// Code generated by MockGen. DO NOT EDIT.
// Source: internal/gateways/user_gateway.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserGateway is a mock of UserGateway interface.
type MockUserGateway struct {
	ctrl     *gomock.Controller
	recorder *MockUserGatewayMockRecorder
}

// MockUserGatewayMockRecorder is the mock recorder for MockUserGateway.
type MockUserGatewayMockRecorder struct {
	mock *MockUserGateway
}

// NewMockUserGateway creates a new mock instance.
func NewMockUserGateway(ctrl *gomock.Controller) *MockUserGateway {
	mock := &MockUserGateway{ctrl: ctrl}
	mock.recorder = &MockUserGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserGateway) EXPECT() *MockUserGatewayMockRecorder {
	return m.recorder
}

// GetUserName mocks base method.
func (m *MockUserGateway) GetUserName(userID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserName", userID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserName indicates an expected call of GetUserName.
func (mr *MockUserGatewayMockRecorder) GetUserName(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserName", reflect.TypeOf((*MockUserGateway)(nil).GetUserName), userID)
}
