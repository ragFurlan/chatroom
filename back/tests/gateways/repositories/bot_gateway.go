// Code generated by MockGen. DO NOT EDIT.
// Source: internal/gateways/bot_gateway.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBotGateway is a mock of BotGateway interface.
type MockBotGateway struct {
	ctrl     *gomock.Controller
	recorder *MockBotGatewayMockRecorder
}

// MockBotGatewayMockRecorder is the mock recorder for MockBotGateway.
type MockBotGatewayMockRecorder struct {
	mock *MockBotGateway
}

// NewMockBotGateway creates a new mock instance.
func NewMockBotGateway(ctrl *gomock.Controller) *MockBotGateway {
	mock := &MockBotGateway{ctrl: ctrl}
	mock.recorder = &MockBotGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBotGateway) EXPECT() *MockBotGatewayMockRecorder {
	return m.recorder
}

// GetStockQuote mocks base method.
func (m *MockBotGateway) GetStockQuote(stockCode string) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStockQuote", stockCode)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStockQuote indicates an expected call of GetStockQuote.
func (mr *MockBotGatewayMockRecorder) GetStockQuote(stockCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStockQuote", reflect.TypeOf((*MockBotGateway)(nil).GetStockQuote), stockCode)
}
