// Code generated by MockGen. DO NOT EDIT.
// Source: internal/gateways/message_gateway.go

// Package repository is a generated GoMock package.
package repository

import (
	entity "chatroom/internal/entities"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMessageGateway is a mock of MessageGateway interface.
type MockMessageGateway struct {
	ctrl     *gomock.Controller
	recorder *MockMessageGatewayMockRecorder
}

// MockMessageGatewayMockRecorder is the mock recorder for MockMessageGateway.
type MockMessageGatewayMockRecorder struct {
	mock *MockMessageGateway
}

// NewMockMessageGateway creates a new mock instance.
func NewMockMessageGateway(ctrl *gomock.Controller) *MockMessageGateway {
	mock := &MockMessageGateway{ctrl: ctrl}
	mock.recorder = &MockMessageGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageGateway) EXPECT() *MockMessageGatewayMockRecorder {
	return m.recorder
}

// CreateMessage mocks base method.
func (m *MockMessageGateway) CreateMessage(message *entity.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMessage", message)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateMessage indicates an expected call of CreateMessage.
func (mr *MockMessageGatewayMockRecorder) CreateMessage(message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMessage", reflect.TypeOf((*MockMessageGateway)(nil).CreateMessage), message)
}

// GetLatestMessages mocks base method.
func (m *MockMessageGateway) GetLatestMessages(room string, limit int) ([]entity.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestMessages", room, limit)
	ret0, _ := ret[0].([]entity.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestMessages indicates an expected call of GetLatestMessages.
func (mr *MockMessageGatewayMockRecorder) GetLatestMessages(room, limit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestMessages", reflect.TypeOf((*MockMessageGateway)(nil).GetLatestMessages), room, limit)
}
